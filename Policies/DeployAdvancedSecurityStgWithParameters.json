{
    "mode": "Indexed",
    "policyRule": {
      "if": {
        "field": "type",
        "equals": "Microsoft.Sql/servers"
      },
      "then": {
        "effect": "DeployIfNotExists",
        "details": {
          "type": "Microsoft.Sql/servers/securityAlertPolicies",
          "name": "Default",
          "existenceCondition": {
            "field": "Microsoft.Sql/securityAlertPolicies.state",
            "equals": "Enabled"
          },
          "roleDefinitionIds": [
            "/providers/microsoft.authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
            "/providers/microsoft.authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab"
          ],
          "deployment": {
            "properties": {
              "mode": "incremental",
              "template": {
                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                "contentVersion": "1.0.0.0",
                "parameters": {
                  "serverName": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "PeriodicScans": {
                    "type": "string"
                  },
                  "NotificationEmailsScan": {
                    "type": "string"
                  },
                  "EmailOwnersScan": {
                    "type": "bollean"
                  },
                  "NotificationEmailsAlert": {
                    "type": "string"
                  },
                  "EmailOwnersAlert": {
                    "type": "bollean"
                  }
                },
                "variables": {
                  "serverResourceGroupName": "[resourceGroup().name]",
                  "subscriptionId": "[subscription().subscriptionId]",
                  "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('serverResourceGroupName'), parameters('location'))]",
                  "storageName": "[tolower(concat('sqlva', variables('uniqueStorage')))]"
                },
                "resources": [
                  {
                    "type": "Microsoft.Storage/storageAccounts",
                    "name": "[variables('storageName')]",
                    "apiVersion": "2019-04-01",
                    "location": "[parameters('location')]",
                    "sku": {
                      "name": "Standard_LRS"
                    },
                    "kind": "Storage",
                    "properties": {}
                  },
                  {
                    "name": "[concat(parameters('serverName'), '/Default')]",
                    "type": "Microsoft.Sql/servers/securityAlertPolicies",
                    "apiVersion": "2017-03-01-preview",
                    "properties": {
                      "state": "Enabled",
                      "emailAccountAdmins": "[parameters('EmailOwnersAlert')]"
                    }
                  },
                  {
                    "name": "[concat(parameters('serverName'), '/Default')]",
                    "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
                    "apiVersion": "2018-06-01-preview",
                    "properties": {
                      "storageContainerPath": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.blob, 'vulnerability-assessment')]",
                      "storageAccountAccessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2018-02-01').keys[0].value]",
                      "recurringScans": {
                        "isEnabled": "[parameters('PeriodicScans')]",
                        "emailSubscriptionAdmins": "[parameters('EmailOwnersScan')]",
                        "emails": "[parameters('NotificationEmailsScan')]"
                      }
                    },
                    "dependsOn": [
                      "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
                      "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
                    ]
                  }
                ]
              },
              "parameters": {
                "serverName": {
                  "value": "[field('name')]"
                },
                "location": {
                  "value": "[field('location')]"
                },
                "PeriodicScans": {
                  "value": "[parameters('PeriodicScans')]"
                },
                "NotificationEmailsScan": {
                  "value": "[parameters('NotificationEmailsScan')]"
                },
                "EmailOwnersScan": {
                  "value": "[parameters('EmailOwnersScan')]"
                },
                "NotificationEmailsAlert": {
                  "value": "[parameters('NotificationEmailsAlert')]"
                },
                "EmailOwnersAlert": {
                  "value": "[parameters('EmailOwnersAlert')]"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "PeriodicScans": {
        "type": "String",
        "metadata": {
          "displayName": "Enable periodic recurring scans",
          "description": "Scan your database for vulnerabilities every 7 days. Scans will be performed every Sunday at approximately 12:00 AM UTC. To enable you must first set a storage account where scan results will be stored."
        },
        "allowedValues": [
          "Disabled",
          "Enabled"
        ],
        "defaultValue": "Enabled"
      },
      "NotificationEmailsScan": {
        "type": "String",
        "metadata": {
          "displayName": "Send scan reports to",
          "description": "Specify a semicolon separated list of emails to which scan reports will be sent"
        },
        "defaultValue": ""
      },
      "EmailOwnersScan": {
        "type": "bollean",
        "metadata": {
          "displayName": "Also send email notification to admins and subscription owners",
          "description": null
        },
        "allowedValues": [
          true,
          false
        ],
        "defaultValue": true
      },
      "NotificationEmailsAlert": {
        "type": "String",
        "metadata": {
          "displayName": "Send alerts to",
          "description": "Specify a semicolon-separated list of emails to which alerts will be sent upon detection of anomalous activities."
        },
        "defaultValue": ""
      },
      "EmailOwnersAlert": {
        "type": "bollean",
        "metadata": {
          "displayName": "Also send email notification to admins and subscription owners",
          "description": null
        },
        "allowedValues": [
          true,
          false
        ],
        "defaultValue": true
      }
    }
  }
